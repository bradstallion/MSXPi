#!/bin/sh
MSXPIHOME=/home/pi/msxpi
export PI=raspberrypi
export ROMBANK1=./target/msxpidos.rom
export OPENMSXDISK=~/Desktop/MSXPi/commands
export GITPATH=https://github.com/costarc/MSXPi/raw/master/software/target

# Functions
UpdateBuildId() {
    fname=$1
    cp $fname $fname.bak
    curdefine=$(cat $fname | grep "^BuildId = ")
    today=$(date +%Y%m%d)
    newbuild=$(cat $fname | grep "BuildId = " | awk '{print $3}' | cut -f2 -d"."|sed 's/"//'|awk '{printf "%03d\n", $1 + 1;}')
    rc=$?
    if [ $rc = 0 ];then
        newdefine="BuildId = \"$today.$newbuild\""
        cat $fname | sed "s/$curdefine/$newdefine/" > $fname.tmp && mv $fname.tmp $fname
        echo "New BuildId for $1: $today.$newbuild"
    fi
}

# Functions
UpdateBuildIdASM() {
    fname=$1
    cp $fname $fname.bak
    curdefine=$(cat $fname | grep "^BuildId: DB")
    today=$(date +%Y%m%d)
    newbuild=$(cat $fname | grep "BuildId: DB" | awk '{print $3}' | cut -f2 -d"."|sed 's/"//'|awk '{printf "%03d\n", $1 + 1;}')
    rc=$?
    if [ $rc = 0 ];then
        newdefine="BuildId: DB \"$today.$newbuild\""
        cat $fname | sed "s/$curdefine/$newdefine/" > $fname.tmp && mv $fname.tmp $fname
        echo "New BuildId for $1: $today.$newbuild"
    fi
}

genUpdateBatch() {
  echo "echo Updating MSXPi client and server software..." > /tmp/msxpiupd.bat
  echo "echo Setting date & time..." >> /tmp/msxpiupd.bat
  echo "pdate" >> /tmp/msxpiupd.bat
  echo " " >> /tmp/msxpiupd.bat
  echo "pcd /home/pi/msxpi" >> /tmp/msxpiupd.bat
  echo " " >> /tmp/msxpiupd.bat
  rm target/msxpiupd.bat  > /dev/null 2>&1
  
  for fn in `ls target | grep -v -i pcopy.com`
  do
    if [ -f target/${fn} ];then
      echo "pcopy "${GITPATH}/${fn}?raw=true >> /tmp/msxpiupd.bat
    fi
  done
  for fn in `ls BASIC`
  do
    if [ -f BASIC/${fn} ];then
      echo "pcopy "${GITPATH}/${fn}?raw=true >> /tmp/msxpiupd.bat
    fi
  done
  echo "pcopy "${GITPATH}/pcopy.com?raw=true pcopynew.com >> /tmp/msxpiupd.bat
  echo "COPY PCOPYNEW.COM PCOPY.COM" >> /tmp/msxpiupd.bat
  echo "DEL PCOPYNEW.COM" >> /tmp/msxpiupd.bat
  echo "echo" >> /tmp/msxpiupd.bat
  echo "echo Updating msxpi-server.py ..." >> /tmp/msxpiupd.bat
  echo "prun wget -q --show-progress -O msxpi-server.py https://tinyurl.com/msxpi-server"  >> /tmp/msxpiupd.bat
  echo "echo" >> /tmp/msxpiupd.bat
  echo "echo Updating MSXPi boot disk ..." >> /tmp/msxpiupd.bat
  echo "prun wget -q --show-progress -O disks/msxpiboot.dsk https://tinyurl.com/msxpibootdisk"  >> /tmp/msxpiupd.bat
  echo "echo" >> /tmp/msxpiupd.bat
  echo "echo Updating MSXPi tools disk ..." >> /tmp/msxpiupd.bat
  echo "prun wget -q --show-progress -O disks/tools.dsk https://tinyurl.com/toolsdisk"  >> /tmp/msxpiupd.bat
  echo "prestart" >> /tmp/msxpiupd.bat
  echo "echo" >> /tmp/msxpiupd.bat
  perl -pe 's/\r?\n/\r\n/' /tmp/msxpiupd.bat > target/msxpiupd.bat
  rm /tmp/msxpiupd.bat
}

# Build MSX-DOS with MSXPi Drivers with build id
UpdateBuildId ./Server/Python/src/msxpi-server.py
UpdateBuildIdASM ./ROM/src/MSX-DOS/msxpi-driver.mac
UpdateBuildIdASM ./ROM/src/BIOS/msxpi-ext.asm

~/Dev/bin/zmac -I ./asm-common/include -I ./ROM/src/MSX-DOS ./ROM/src/MSX-DOS/msx-dos.mac
[ -f ./zout/msx-dos.hex ] && ~/Dev/bin/hex2bin -s 4000 ./zout/msx-dos.hex && cp ./zout/msx-dos.bin ./target/msxpidos.rom

# MSX-Dos P Commands
~/Dev/bin/z80asm -I ./asm-common/include ./ROM/src/BIOS/msxpi-ext.asm  -o ./target/msxpiext.bin
~/Dev/bin/z80asm -I ./asm-common/include ./Client/src/template.com.asm -o ./target/template.com
~/Dev/bin/z80asm -I ./asm-common/include ./Client/src/pdir.com.asm     -o ./target/pdir.com
~/Dev/bin/z80asm -I ./asm-common/include ./Client/src/prun.com.asm     -o ./target/prun.com
~/Dev/bin/z80asm -I ./asm-common/include ./Client/src/pset.com.asm     -o ./target/pset.com
~/Dev/bin/z80asm -I ./asm-common/include ./Client/src/pcd.com.asm      -o ./target/pcd.com
~/Dev/bin/z80asm -I ./asm-common/include ./Client/src/pwifi.com.asm    -o ./target/pwifi.com
~/Dev/bin/z80asm -I ./asm-common/include ./Client/src/pdate.com.asm    -o ./target/pdate.com
~/Dev/bin/z80asm -I ./asm-common/include ./Client/src/pcopy.com.asm    -o ./target/pcopy.com
~/Dev/bin/z80asm -I ./asm-common/include ./Client/src/pplay.com.asm    -o ./target/pplay.com
~/Dev/bin/z80asm -I ./asm-common/include ./Client/src/pvol.com.asm     -o ./target/pvol.com
~/Dev/bin/z80asm -I ./asm-common/include ./Client/src/pver.com.asm     -o ./target/pver.com
~/Dev/bin/z80asm -I ./asm-common/include ./Client/src/dosinit.com.asm  -o ./target/dosinit.com
~/Dev/bin/z80asm -I ./asm-common/include ./Client/src/at28c256.com.asm -o ./target/at28c256.com
~/Dev/bin/z80asm -I ./asm-common/include ./Client/src/preboot.com.asm  -o ./target/preboot.com
~/Dev/bin/z80asm -I ./asm-common/include ./Client/src/prestart.com.asm -o ./target/prestart.com
~/Dev/bin/z80asm -I ./asm-common/include ./Client/src/pshut.com.asm    -o ./target/pshut.com

cp target/disks/blank.dsk target/disks/msxpiboot.dsk
cp target/disks/blank.dsk target/disks/tools.dsk

# Generate msxpiboot.dsk disk image
for f in `ls ~/Dev/MSX/MSXDOS13/`
do
  [ -f ~/Dev/MSX/MSXDOS13/$f ] && python3 ~/Dev/github/MSXPi/software/dsktool.py copy ~/Dev/MSX/MSXDOS13/$f target/disks/msxpiboot.dsk:/$f
  [ -f ~/Dev/MSX/MSXDOS13/$f ] && python3 ~/Dev/github/MSXPi/software/dsktool.py copy ~/Dev/MSX/MSXDOS13/$f target/disks/tools.dsk:/$f
done
# Add the MSXPi commands and ROM only to msxpiboot.dsk
for f in `ls target/`
do
  [ -f target/$f ] && python3 ./dsktool.py copy target/$f target/disks/msxpiboot.dsk:/$f
done

genUpdateBatch

